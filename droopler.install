<?php
/**
 * @file
 * Install, update and uninstall functions for the profilename install profile.
 */

use Drupal\Core\Config\FileStorage;
use Drupal\Core\Entity\ContentEntityBase;
use Drupal\file\Plugin\Field\FieldType\FileFieldItemList;
use Drupal\Core\Extension\MissingDependencyException;
use Drupal\we_megamenu\WeMegaMenuBuilder;

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function droopler_install() {
  // First, do everything in standard profile.
  include_once DRUPAL_ROOT . '/core/profiles/standard/standard.install';
  standard_install();

  \Drupal::configFactory()
    ->getEditable('node.settings')
    ->set('use_admin_theme', TRUE)
    ->save();

  \Drupal::configFactory()
    ->getEditable('system.site')
    ->set('default_langcode', 'en')
    ->set('page.front', '/node/1')
    ->save();

  // Install init content. It will add an install task to be performed later.
  \Drupal::service('module_installer')->install(['d_content_init']);

  // Try to install custom init that alters the original one.
  try {
    \Drupal::service('module_installer')->install(['d_custom_init']);
  } catch (\Drupal\Core\Extension\MissingDependencyException $e) {
    \Drupal::logger('droopler_install')
      ->notice('Custom content init not detected.');
  }

  // Remove footer menu menu to avoid fatal error while trying to edit it
  // because of missing route.
  \Drupal::configFactory()->getEditable('system.menu.footer')->delete();

  // Set droopler_theme as default.
  \Drupal::configFactory()
    ->getEditable('system.theme')
    ->set('default', 'droopler_theme')
    ->set('admin', 'seven')
    ->save();
}

/**
 * Implements hook_install_tasks()
 */
function droopler_install_tasks() {
  $tasks = [
    'droopler_enable_blog' => [
      'display' => TRUE,
      'display_name' => t('Install d_blog'),
      'type' => 'normal',
    ],
    'droopler_enable_product' => [
      'display' => TRUE,
      'display_name' => t('Install d_products'),
      'type' => 'normal',
    ],
    'droopler_enable_demo' => [
      'display' => TRUE,
      'display_name' => t('Install Demo'),
      'type' => 'normal',
    ],
    'd_content_init_create_all' => [
      'display' => TRUE,
      'display_name' => t('Init content'),
      'type' => 'normal',
    ],
    'droopler_enable_subtheme' => [
      'display' => TRUE,
      'display_name' => t('Install and enable subtheme'),
      'type' => 'normal',
    ],
  ];
  return $tasks;
}

/**
 * Import a config file.
 *
 * @param string $module
 *  Module name.
 * @param string $name
 *  Config file name without .yml extension.
 *
 * @todo To be moved to a new manager class.
 *
 */
function _droopler_import_config($module, $name) {
  $config_path = drupal_get_path('module', $module) . '/config/install';
  $source = new FileStorage($config_path);
  $config_storage = \Drupal::service('config.storage');
  $config_storage->write($name, $source->read($name));
}

/**
 * Install d_blog.
 * This must be in a separate task because of dependency issues.
 */
function droopler_enable_blog() {
  $modules = [
    'd_blog',
  ];
  \Drupal::service('module_installer')->install($modules, TRUE);
}

/**
 * Install d_product.
 * This must be in a separate task because of dependency issues.
 */
function droopler_enable_product() {
  $modules = [
    'd_product',
  ];
  \Drupal::service('module_installer')->install($modules, TRUE);
  \Drupal::service('config.installer')->installOptionalConfig();
}

/**
 * Install all demo modules.
 */
function droopler_enable_demo() {
  $modules = [
    'd_blog_init',
    'd_product_init',
    'd_demo',
  ];
  \Drupal::service('module_installer')->install($modules, TRUE);
}

/**
 * Enable subtheme.
 */
function droopler_enable_subtheme() {
  try {
    \Drupal::service('theme_installer')->install(['droopler_subtheme']);
    \Drupal::configFactory()
      ->getEditable('system.theme')
      ->set('default', 'droopler_subtheme')
      ->set('admin', 'seven')
      ->save();

    // Additional operations after subtheme installation.
    droopler_enable_subtheme_postprocess();
  } catch (Exception $e) {
    \Drupal::logger('droopler_install')->notice('No subtheme detected.');
  }
}

/**
 * Additional operations after subtheme installation.
 *
 * All those operations have to be executed after installation of the subtheme.
 * We can think about to place them in the droopler_subtheme.install file when
 * this functionality will be implemented.
 *
 * @see: https://www.drupal.org/project/drupal/issues/2652542
 * @see: https://www.drupal.org/node/2937955
 */
function droopler_enable_subtheme_postprocess() {
  // Set logo same as on base theme if custom path has been defined there.
  $base_settings = Drupal::configFactory()
    ->getEditable('droopler_theme.settings');
  if (!$base_settings->get('logo.use_default')
    && $logo_path = $base_settings->get('logo.path')) {
    $current_settings = Drupal::configFactory()
      ->getEditable('droopler_subtheme.settings');
    $current_settings->set('logo.use_default', FALSE);
    $current_settings->set('logo.path', $logo_path);
    $current_settings->save();
  }

  // Copy configuration of the WeMegaMenu from base to subtheme.
  if ($base_menu = WeMegaMenuBuilder::loadConfig('main', 'droopler_theme')) {
    WeMegaMenuBuilder::saveConfig('main', 'droopler_subtheme', json_encode($base_menu));
    we_megamenu_flush_render_cache();
  }
}

/**
 * Droopler 1.3 Updates.
 */
function droopler_update_8101() {
  $module_installer = \Drupal::service('module_installer');

  // Install modules.
  $modules = [
    'd_p_counters',
    'd_p_gallery',
    'd_p_side_embed',
    'd_p_side_tiles',
    'd_p_tiles',
    'colorbox',
    'd_p_help',
  ];
  $module_installer->install($modules, TRUE);

  // Install config.
  _droopler_import_config('d_content', 'field.field.node.content_page.field_page_section');
}

/**
 * Droopler 1.4 Updates.
 */
function droopler_update_8102() {
  $values = [];

  /** @var Drupal\Core\Extension\ModuleInstallerInterface $module_installer */
  $module_installer = \Drupal::service('module_installer');

  // Install checklistapi and d_update modules.
  try {
    $modules = [
      'checklistapi',
      'd_update',
    ];
    $result = $module_installer->install($modules, TRUE);
    $values['droopler__droopler_update_8102_0'] = $result;
    $values['droopler__droopler_update_8102_1'] = $result;
  } catch (MissingDependencyException $e) {
    $values['droopler__droopler_update_8102_0'] = FALSE;
    $values['droopler__droopler_update_8102_1'] = FALSE;
  }

  /** @var Drupal\d_update\Updater $updater */
  $updater = \Drupal::service('d_update');

  // Install editor role.
  $configs = [
    'd_content' => [
      'user.role.d_editor' => '',
    ],
  ];
  $values['droopler__droopler_update_8102_2'] = $updater->importConfigs($configs);

  // Update blog post config.
  $configs = [
    'd_blog' => [
      'core.entity_view_display.node.blog_post.thumbnail' => '',
      'core.entity_view_mode.node.thumbnail' => '',
    ],
  ];
  $values['droopler__droopler_update_8102_3'] = $updater->importConfigs($configs);

  // Update fields config.
  $configs = [
    'd_p_carousel' => [
      'field.field.paragraph.d_p_carousel.field_d_icon' => '',
      'field.field.paragraph.d_p_carousel_item.field_d_image' => '',
    ],
    'd_blog' => [
      'field.field.node.blog_post.field_blog_main_image' => '',
      'field.field.paragraph.d_p_blog_image.field_d_image' => '',
    ],
    'd_p_banner' => [
      'field.field.paragraph.d_p_banner.field_d_icon' => '',
      'field.field.paragraph.d_p_banner.field_d_image_background' => '',
    ],
    'd_p_counters' => [
      'field.field.paragraph.d_p_group_of_counters.field_d_icon' => '',
      'field.field.paragraph.d_p_group_of_counters.field_d_image_background' => '',
    ],
    'd_p_form' => [
      'field.field.paragraph.d_p_form.field_d_icon' => '',
      'field.field.paragraph.d_p_form.field_d_image_background' => '',
    ],
    'd_p_gallery' => [
      'field.field.paragraph.d_p_gallery.field_d_icon' => '',
      'field.field.paragraph.d_p_gallery.field_d_image' => '',
    ],
    'd_p_side_embed' => [
      'field.field.paragraph.d_p_side_embed.field_d_icon' => '',
    ],
    'd_p_side_image' => [
      'field.field.paragraph.d_p_side_image.field_d_icon' => '',
      'field.field.paragraph.d_p_side_image.field_d_image_background' => '',
    ],
    'd_p_side_tiles' => [
      'field.field.paragraph.d_p_side_tiles.field_d_icon' => '',
      'field.field.paragraph.d_p_side_tiles.field_d_image' => '',
    ],
    'd_p_subscribe_file' => [
      'field.field.paragraph.d_p_subscribe_file.field_d_icon' => '',
      'field.field.paragraph.d_p_subscribe_file.field_d_image_background' => '',
    ],
    'd_p_text_blocks' => [
      'field.field.paragraph.d_p_group_of_text_blocks.field_d_icon' => '',
      'field.field.paragraph.d_p_single_text_block.field_d_icon' => '',
    ],
    'd_p_text_paged' => [
      'field.field.paragraph.d_p_text_paged.field_d_icon' => '',
    ],
    'd_p_text_with_bckg' => [
      'field.field.paragraph.d_p_text_with_bckg.field_d_icon' => '',
      'field.field.paragraph.d_p_text_with_bckg.field_d_image_background' => '',
    ],
    'd_p_tiles' => [
      'field.field.paragraph.d_p_tiles.field_d_icon' => '',
      'field.field.paragraph.d_p_tiles.field_d_image' => '',
    ],
  ];
  $values['droopler__droopler_update_8102_4'] = $updater->importConfigs($configs);

  // Install geysir and d_geysir modules.
  try {
    $modules = [
      'geysir',
      'd_geysir',
    ];
    $result = $module_installer->install($modules, TRUE);
    $values['droopler__droopler_update_8102_5'] = $result;
    $values['droopler__droopler_update_8102_6'] = $result;
  } catch (MissingDependencyException $e) {
    $values['droopler__droopler_update_8102_5'] = FALSE;
    $values['droopler__droopler_update_8102_6'] = FALSE;
  }

  // Update blog post metatags.
  $configs = [
    'd_blog' => [
      'metatag.metatag_defaults.node__blog_post' => '',
    ],
  ];
  $values['droopler__droopler_update_8102_7'] = $updater->importConfigs($configs);

  $progress = [
    'v1.3' => [],
    'v1.4' => $values,
  ];

  // Mark 1.3 update as successfull.
  for ($i = 0; $i <= 7; $i++) {
    $progress['v1.3']['droopler__droopler_update_8101_' . $i] = TRUE;
  }
  $updater->checklist()->saveProgress($progress);
}


/**
 * Droopler 2.0 Updates.
 */
function droopler_update_8103() {
  /** @var Drupal\Core\Extension\ModuleInstallerInterface $module_installer */
  $module_installer = \Drupal::service('module_installer');

  /** @var Drupal\d_update\Updater $updater */
  $updater = \Drupal::service('d_update');

  // Remove footer menu menu to avoid fatal error while trying to edit it
  // because of missing route.
  \Drupal::configFactory()->getEditable('system.menu.footer')->delete();

  /** Migrate old saved checklist configs to new state storage. */
  $updater->checklist()->migrateConfigProgressToStateProgress();

  // Install contrib modules.
  try {
    $modules = [
      'entity_reference_display',
      'we_megamenu',
    ];
    $result = $module_installer->install($modules, TRUE);
    $values['droopler__droopler_update_8103_0'] = $result;
  } catch (MissingDependencyException $e) {
    $values['droopler__droopler_update_8103_0'] = FALSE;
  }
  // Import new configs for d_p.
  $updater->importConfigs([
    'd_p' => [
      'field.storage.paragraph.field_d_background_color' => '',
      'field.storage.paragraph.field_d_node_reference' => '',
      'field.storage.paragraph.field_d_settings' => '',
    ],
  ]);
  // Check if any 1.4 custom modules are not installed and install them.
  try {
    $modules = calculate_modules_for_install([
      'd_content',
      'd_geysir',
      'd_lang_dropdown',
      'd_p',
      'd_p_banner',
      'd_p_carousel',
      'd_p_counters',
      'd_p_form',
      'd_p_gallery',
      'd_p_help',
      'd_p_side_embed',
      'd_p_side_image',
      'd_p_side_tiles',
      'd_p_subscribe_file',
      'd_p_text_blocks',
      'd_p_text_paged',
      'd_p_text_with_bckg',
      'd_p_tiles',
      'd_update',
    ]);
    $values['droopler__droopler_update_8103_1'] = $module_installer->install($modules, TRUE);
  } catch (MissingDependencyException $e) {
    $values['droopler__droopler_update_8103_1'] = FALSE;
  }

  // Activate new 2.0 modules.
  try {
    $modules = [
      'd_p_node',
      'd_p_side_by_side',
      'd_search',
      'd_social_media',
      'd_p_reference_content',
    ];
    $result = $module_installer->install($modules, TRUE);
    $values['droopler__droopler_update_8103_2'] = $result;
  } catch (MissingDependencyException $e) {
    $values['droopler__droopler_update_8103_2'] = FALSE;
  }

  // Add new fields to paragraphs.
  $configs = [
    'd_p_banner' => [
      'field.field.paragraph.d_p_banner.field_d_settings' => '',
    ],
    'd_p_carousel' => [
      'field.field.paragraph.d_p_carousel.field_d_settings' => '',
      'field.field.paragraph.d_p_carousel_item.field_d_settings' => '',
    ],
    'd_p_counters' => [
      'field.field.paragraph.d_p_group_of_counters.field_d_settings' => '',
      'field.field.paragraph.d_p_single_counter.field_d_settings' => '',
    ],
    'd_p_gallery' => [
      'field.field.paragraph.d_p_gallery.field_d_settings' => '',
    ],
    'd_p_form' => [
      'field.storage.paragraph.field_d_layout_modifier' => '',
      'field.field.paragraph.d_p_form.field_d_layout_modifier' => '',
      'field.field.paragraph.d_p_form.field_d_long_text' => '',
      'field.field.paragraph.d_p_form.field_d_settings' => '',
    ],
    'd_p_side_image' => [
      'field.field.paragraph.d_p_side_image.field_d_background_color' => '',
      'field.field.paragraph.d_p_side_image.field_d_settings' => '',
    ],
    'd_p_side_tiles' => [
      'field.field.paragraph.d_p_side_tiles.field_d_settings' => '',
    ],
    'd_p_subscribe_file' => [
      'field.field.paragraph.d_p_subscribe_file.field_d_settings' => '',
    ],
    'd_p_side_embed' => [
      'field.field.paragraph.d_p_side_embed.field_d_settings' => '',
    ],
    'd_p_text_blocks' => [
      'field.field.paragraph.d_p_group_of_text_blocks.field_d_long_text' => '',
      'field.field.paragraph.d_p_group_of_text_blocks.field_d_settings' => '',
      'field.field.paragraph.d_p_single_text_block.field_d_background_color' => '',
      'field.field.paragraph.d_p_single_text_block.field_d_settings' => '',
    ],
    'd_p_text_paged' => [
      'field.field.paragraph.d_p_text_paged.field_d_settings' => '',
    ],
    'd_p_text_with_bckg' => [
      'field.field.paragraph.d_p_text_with_bckg.field_d_settings' => '',
    ],
    'd_p_tiles' => [
      'field.field.paragraph.d_p_tiles.field_d_settings' => '',
    ],
  ];
  $values['droopler__droopler_update_8103_3'] = $updater->importConfigs($configs);


  // Update existing fields.
  $configs = [
    'd_content' => [
      'field.field.node.content_page.field_page_section' => '9a1690fe15a13fa505af05b76e793b70',
    ],
    'd_p_banner' => [
      'field.field.paragraph.d_p_banner.field_d_cta_link' => 'a145eaef534859402221c448fd67e3bc',
    ],
    'd_p_side_image' => [
      'field.storage.paragraph.field_d_p_si_image_side' => '453281e79d432694a700dfd68dcb01c6',
      'field.field.paragraph.d_p_side_image.field_d_cta_link' => '1c2228d6bc04287c678335082ad90dd6',
    ],
    'd_p_side_embed' => [
      'field.field.paragraph.d_p_side_embed.field_d_cta_link' => '0be7fbc269f875d507f92dcac8962937',
    ],
    'd_p_side_tiles' => [
      'field.field.paragraph.d_p_side_tiles.field_d_cta_link' => '20cf110a5b5ecb2304b9b68a11d7099c',
    ],
    'd_p_text_blocks' => [
      'field.field.paragraph.d_p_group_of_text_blocks.field_d_p_tb_block_reference' => '5220f02166f380407f4f09f31c95eaac',
      'field.field.paragraph.d_p_group_of_text_blocks.field_d_cta_link' => 'fc72b9cf2dc4bd9b438caf61981a58dc',
    ],
    'd_p_text_paged' => [
      'field.field.paragraph.d_p_text_paged.field_d_cta_link' => '2aedcfb9abed6f5666cccb49ccea5ca4',
    ],
    'd_p_text_with_bckg' => [
      'field.field.paragraph.d_p_text_with_bckg.field_d_cta_link' => 'fab446abaff342dadba04d9d564804cf',
    ],
  ];
  $values['droopler__droopler_update_8103_4'] = $updater->importConfigs($configs);

  // Update misc config.
  $configs = [
    'profile/droopler' => [
      'core.entity_form_display.contact_message.feedback.default' => '',
      // @todo: These configs cause problems in logs, they must be double tested.
      //'simple_sitemap.settings' => '38979e56edc0ee9369928a174dbc5578',
      //'user.role.anonymous' => '4ea4b28e3275b7add9c389aec75a5216',
      //'user.role.authenticated' => 'ca382ea635e3da6144322e05e5c3f4a8',
      'taxonomy.vocabulary.tags' => 'a8e29915b68d9ff1e4d2e587472f0411',
    ],
    'd_content' => [
      'core.entity_view_display.node.content_page.d_small_box' => '',
      'simple_sitemap.bundle_settings.default.node.content_page' => '',
      'metatag.metatag_defaults.node__content_page' => '51026c0870dce6adfd52d68b047936d0',
    ],
    'd_p_subscribe_file' => [
      'views.view.subscribe_file_paragraph' => '',
    ],
    // @todo: We must check the behavior of the language switcher after update.
    //'theme/droopler_theme' => [
    //  'block.block.languageswitcher' => 'b859a762deeb756585ae12b6dddcb25d',
    //],
  ];
  $values['droopler__droopler_update_8103_5'] = $updater->importConfigs($configs);

  /** @var \Drupal\Core\Extension\ModuleHandler $module_handler */
  $module_handler = \Drupal::service('module_handler');
  if ($module_handler->moduleExists('d_blog')) {
    // Update d_blog config.
    $configs = [
      'd_blog' => [
        'metatag.metatag_defaults.node__blog_post' => '0025edc1a8903c7e8469ecaeb71875f9',
        'core.entity_view_display.node.blog_post.d_small_box' => '',
        'core.entity_view_mode.node.teaser_small' => '',
        'core.entity_view_display.node.blog_post.teaser_small' => '',
        'pathauto.pattern.node_blog_pattern' => '',
        'responsive_image.styles.blog_images_style' => '59b94ff831b5521ba444c9c81cf864a8',
        'core.entity_view_display.taxonomy_term.blog_posts_category.default' => 'cd2179b7b383ea8b42e3921348b62f7c',
        'taxonomy.vocabulary.blog_posts_category' => '286f4a1e6a13ee4c456b5932964216ce',
        'simple_sitemap.bundle_settings.default.node.blog_post' => '',
        'field.field.node.blog_post.field_blog_sections' => 'a6cf7b574bb813aa22f7bf07e089e15a',
        'views.view.blog_listing' => 'ef937316b945c52ba62008e8314c7776',
      ],
    ];
    $values['droopler__droopler_update_8103_6'] = $updater->importConfigs($configs);
  }
  else {
    $values['droopler__droopler_update_8103_6'] = TRUE;
  }

  if ($module_handler->moduleExists('d_product')) {
    // Update d_product config.
    $configs = [
      'd_product' => [
        'field.field.node.d_product.field_page_section' => '',
        'field.field.node.d_product.body' => '86148679c204177206e4aa1c7976a533',
        'views.view.product_images' => 'd3d8b4938b464212d81a4ae08c60d54c',
        'views.view.products_list' => 'e72d8ee10d2d1192ce439c1fdd7287cf',
        'taxonomy.vocabulary.d_product_categories' => '244e4b61dda06b0290449488d97c6c1b',
        'simple_sitemap.bundle_settings.node.d_product' => '854fb990fa532fa6ac8200d8161e44e7',
        'block.block.exposedformproducts_listproducts_list' => 'ea39d74f901a0adb45d19bfa298f39fa',
        'block.block.mobilefilterssubmit' => 'b026df2741fc999f2c44a2d69f35ebbd',
        'block.block.productcategoriestaxonomytermname' => '2fccf0cef7aefb201d9770096be6f08f',
        'block.block.resetfilters_2' => '50869d4a64e21ce3560e4848b4fba666',
        'block.block.resetfilters' => '2fdeb0ff031e0a500f81193fc3856f23',
        'block.block.tagstaxonomytermname' => 'a0cdc791512d164456e0386e97f3ba18',
      ],
    ];
    $values['droopler__droopler_update_8103_7'] = $updater->importConfigs($configs);
  }
  else {
    $values['droopler__droopler_update_8103_7'] = TRUE;
  }

  if ($module_handler->moduleExists('we_megamenu')) {
    $configs = [
      'theme/droopler_theme' => [
        'block.block.mainnavigation' => '',
        'block.block.mainnavigation_2' => '',
      ],
    ];
    $values['droopler__droopler_update_8103_8'] = $updater->importConfigs($configs);

    if (\Drupal::service('theme_handler')
        ->getDefault() === 'droopler_subtheme') {
      $updater->instantiateBlocksForSubtheme('droopler_subtheme', $configs);
    }
  }

  $progress = [
    'v2.0' => $values,
  ];

  $updater->checklist()->saveProgress($progress);
}

/**
 * Droopler 2.0 Media migrate.
 */
function droopler_update_8104() {
  //Import all target Media Fields.
  /** @var Drupal\d_update\Updater $updater */
  $updater = \Drupal::service('d_update');

  $configs = [
    'd_content' => [
      'field.storage.node.field_teaser_media_image' => '',
      'field.field.node.content_page.field_teaser_media_image' => '',
    ],
    'd_p_banner' => [
      'field.field.paragraph.d_p_banner.field_d_media_background' => '',
      'field.field.paragraph.d_p_banner.field_d_media_icon' => '',
    ],
    'd_p_carousel' => [
      'field.field.paragraph.d_p_carousel.field_d_media_icon' => '',
      'field.field.paragraph.d_p_carousel_item.field_d_media_icon' => '',
    ],
    'd_p_counters' => [
      'field.field.paragraph.d_p_group_of_counters.field_d_media_background' => '',
      'field.field.paragraph.d_p_group_of_counters.field_d_media_icon' => '',
    ],
    'd_p_gallery' => [
      'field.field.paragraph.d_p_gallery.field_d_media_icon' => '',
      'field.field.paragraph.d_p_gallery.field_d_media_image' => '',
    ],
    'd_p_form' => [
      'field.field.paragraph.d_p_form.field_d_media_icon' => '',
      'field.field.paragraph.d_p_form.field_d_media_background' => '',
    ],
    'd_p_side_embed' => [
      'field.field.paragraph.d_p_side_embed.field_d_media_icon' => '',
    ],
    'd_p_side_image' => [
      'field.field.paragraph.d_p_side_image.field_d_media_icon' => '',
      'field.field.paragraph.d_p_side_image.field_d_media_background' => '',
    ],
    'd_p_side_tiles' => [
      'field.field.paragraph.d_p_side_tiles.field_d_media_icon' => '',
      'field.field.paragraph.d_p_side_tiles.field_d_media_image' => '',
    ],
    'd_p_subscribe_file' => [
      'field.field.paragraph.d_p_subscribe_file.field_d_media_icon' => '',
      'field.field.paragraph.d_p_subscribe_file.field_d_media_background' => '',
    ],
    'd_p_text_blocks' => [
      'field.field.paragraph.d_p_group_of_text_blocks.field_d_media_icon' => '',
      'field.field.paragraph.d_p_single_text_block.field_d_media_background' => '',
      'field.field.paragraph.d_p_single_text_block.field_d_media_icon' => '',
    ],
    'd_p_text_paged' => [
      'field.field.paragraph.d_p_text_paged.field_d_media_icon' => '',
    ],
    'd_p_text_with_bckg' => [
      'field.field.paragraph.d_p_text_with_bckg.field_d_media_icon' => '',
      'field.field.paragraph.d_p_text_with_bckg.field_d_media_background' => '',
    ],
    'd_p_tiles' => [
      'field.field.paragraph.d_p_tiles.field_d_media_icon' => '',
      'field.field.paragraph.d_p_tiles.field_d_media_image' => '',
    ],
  ];
  $values['droopler__droopler_update_8104_1'] = $updater->importConfigs($configs);

  $module_handler = \Drupal::service('module_handler');
  if ($module_handler->moduleExists('d_blog')) {
    // Update d_blog config.
    $configs = [
      'd_blog' => [
        'core.entity_view_mode.media.d_blog_image' => '',
        'core.entity_view_display.media.d_image.d_blog_image' => '',
        'field.storage.node.field_blog_media_main_image' => '',
        'field.field.paragraph.d_p_blog_image.field_d_media_image' => '',
        'field.field.node.blog_post.field_blog_media_main_image' => '',
      ],
    ];
    $values['droopler__droopler_update_8104_2'] = $updater->importConfigs($configs);
  }
  else {
    $values['droopler__droopler_update_8104_2'] = TRUE;
  }
  if ($module_handler->moduleExists('d_product')) {
    // Update d_product config.
    $configs = [
      'd_product' => [
        'field.storage.node.field_d_product_media' => '',
        'field.field.node.d_product.field_d_product_media' => '',
      ],
    ];
    $values['droopler__droopler_update_8104_3'] = $updater->importConfigs($configs);
  }
  else {
    $values['droopler__droopler_update_8104_3'] = TRUE;
  }

  /**
   * Migrate images to media fields.
   *
   * @var \Drupal\d_content_init\ContentInitManagerMedia $media_manager
   */
  $media_manager = Drupal::service('d_content_init.manager_media');

  $fieldsToMigrate = [
    'field_d_icon' => 'field_d_media_icon',
    'field_d_image' => 'field_d_media_image',
    'field_d_image_background' => 'field_d_media_background',
    'field_blog_main_image' => 'field_blog_media_main_image',
    'field_teaser_image' => 'field_teaser_media_image',
    'field_product_image' => 'field_d_product_media',
  ];
  $fieldsMigrationSpecialCases = [
    'd_p_carousel_item' => [
      'field_d_image' => 'field_d_media_icon',
    ],
  ];

  /** @var \Drupal\Core\Entity\EntityStorageInterface $fieldStorage */
  $fieldStorage = \Drupal::entityTypeManager()
    ->getStorage('field_storage_config');

  $listOfMigratedFields = [];
  foreach ($fieldsToMigrate as $sourceFieldName => $targetFieldName) {
    $res = $fieldStorage->loadByProperties([
      'field_name' => $sourceFieldName,
    ]);

    /** @var \Drupal\field\Entity\FieldStorageConfig $storage */
    foreach ($res as $storage) {
      $bundles = $storage->getBundles();
      $entityType = $storage->getTargetEntityTypeId();

      $entities = \Drupal::entityTypeManager()
        ->getStorage($entityType)->loadByProperties([
          'type' => $bundles,
        ]);

      $errorsWhileMigrating = [];

      /** @var ContentEntityBase $entity */
      foreach ($entities as $entity) {
        if (!$entity->hasField($sourceFieldName)) {
          continue;
        }

        /** @var FileFieldItemList $sourceField */
        $sourceField = $entity->get($sourceFieldName);

        if ($sourceField->isEmpty()) {
          continue;
        }
        $entityTargetFieldName = isset($fieldsMigrationSpecialCases[$entity->bundle()][$sourceFieldName]) ? $fieldsMigrationSpecialCases[$entity->bundle()][$sourceFieldName] : $targetFieldName;

        $sourceValues = $sourceField->getValue();

        try {
          foreach ($sourceValues as $sourceImage) {
            $media_entity = $media_manager->createMediaImageFromFid($sourceImage['target_id'], $sourceImage['alt']);
            $entity->get($entityTargetFieldName)->appendItem($media_entity);

          }
        } catch (InvalidArgumentException $e) {
          $errorsWhileMigrating[$entity->bundle()][$sourceField] = $sourceFieldName;

          \Drupal::logger('droopler_update')
            ->error('Exception while migrating media images for @sourceField to @targetField at @bundle @type.', [
              '@sourceField' => $sourceFieldName,
              '@targetField' => $entityTargetFieldName,
              '@bundle' => $entity->bundle(),
              '@type' => $entityType,
            ]);
        }

        $entity->save();
      }

      foreach ($bundles as $migratedBundle) {
        if (isset($errorsWhileMigrating[$migratedBundle][$sourceFieldName])) {
          continue;
        }
        $listOfMigratedFields[$entityType][$migratedBundle][$sourceFieldName] = $sourceFieldName;
      }
    }
  }

  $values['droopler__droopler_update_8104_4'] = TRUE;

  /**
   *  Delete migrated fields.
   */

  /** @var $entityFieldManager EntityFieldManager */
  $entityFieldManager = \Drupal::service('entity_field.manager');

  foreach ($listOfMigratedFields as $entityType => $migratedBundles) {
    foreach ($migratedBundles as $bundle => $migratedBundleFields) {
      $bundleAllFields = $entityFieldManager->getFieldDefinitions($entityType, $bundle);

      foreach ($migratedBundleFields as $fieldToDelete) {
        if (isset($bundleAllFields[$fieldToDelete])) {
          $bundleAllFields[$fieldToDelete]->delete();

          $newFieldName = isset($fieldsMigrationSpecialCases[$bundle][$fieldToDelete]) ? $fieldsMigrationSpecialCases[$bundle][$fieldToDelete] : $fieldsToMigrate[$fieldToDelete];

          \Drupal::logger('droopler_update')
            ->info('Deleted @oldField field, it\'s values were migrated to @newField for all @bundle @type', [
              '@oldField' => $fieldToDelete,
              '@newField' => $newFieldName,
              '@bundle' => $bundle,
              '@type' => $entityType,
            ]);
        }
      }
    }
  }

  $values['droopler__droopler_update_8104_5'] = TRUE;

  $progress = [
    'v2.0' => $values,
  ];

  $updater->checklist()->saveProgress($progress);
}

/**
 * Droopler 2.0 Import all other modified configs after Media migrations.
 */
function droopler_update_8105() {
  /** @var Drupal\d_update\Updater $updater */
  $updater = \Drupal::service('d_update');

  $configs = [
    'd_content' => [
      'core.entity_form_display.node.content_page.default' => '7a0b2e1e786903c57bc996039824a58e',
      'core.entity_view_display.node.content_page.default' => '0b0eecf82a118107fa727905114d35d5',
    ],
    'd_p_banner' => [
      'core.entity_form_display.paragraph.d_p_banner.default' => 'fb40755b6e1f4295fc3f309c08575b2a',
      'core.entity_view_display.paragraph.d_p_banner.default' => '0b241859c2164e00f623d51474c9c98e',
      'paragraphs.paragraphs_type.d_p_banner' => '79d04f0ad34de18bf79be53093b731c6',
    ],
    'd_p_carousel' => [
      'core.entity_form_display.paragraph.d_p_carousel.default' => 'b3dfe3e086dce2dee1c66b58603c188a',
      'core.entity_form_display.paragraph.d_p_carousel_item.default' => '7933e8ed3421fa78fc71440229c6ef38',
      'core.entity_view_display.paragraph.d_p_carousel.default' => 'd8b1446958a593f171ce97c47483a215',
      'core.entity_view_display.paragraph.d_p_carousel_item.default' => 'da69ae8dc7f16cf96c735e9790105ccd',
      'field.field.paragraph.d_p_carousel.field_d_number' => 'c50168f54cba488963b516c43ffcb733',
      'field.field.paragraph.d_p_carousel.field_d_p_cs_item_reference' => '44ba99c66a10c15532a4dd1aa4af1f37',
      'field.field.paragraph.d_p_carousel_item.field_d_cta_link' => '0b8277e73e063b424167256c589ad0ec',
      'field.field.paragraph.d_p_carousel_item.field_d_long_text' => 'ebad53007d3a472f08fea2d6bd67f81c',
      'field.field.paragraph.d_p_carousel_item.field_d_main_title' => '5f271de06a8f070fca5c3960cd9ba9db',
      'paragraphs.paragraphs_type.d_p_carousel_item' => 'd1724b47b5deb12773feb2506b559d45',
    ],
    'd_p_counters' => [
      'core.entity_form_display.paragraph.d_p_group_of_counters.default' => '42949b433c67bf1ca7eade52f7049e49',
      'core.entity_form_display.paragraph.d_p_single_counter.default' => 'ef8558fa8908a0bf4313e91f1712d9b2',
      'core.entity_view_display.paragraph.d_p_group_of_counters.default' => 'a3ab219a981ca43949608ff57d2e85e5',
      'core.entity_view_display.paragraph.d_p_single_counter.default' => '535fa5961c5b917a8a94888c9ea3151f',
    ],
    'd_p_gallery' => [
      'core.entity_form_display.paragraph.d_p_gallery.default' => 'f2cab24a99d2c1ce9fa99dc3b626fcbe',
      'core.entity_view_display.paragraph.d_p_gallery.default' => '7cdf3fdbab2e83be32e3537ca4d62c2a',
    ],
    'd_p_form' => [
      'core.entity_form_display.paragraph.d_p_form.default' => '92bade972f3e47614fbaa5c487f322cc',
      'core.entity_view_display.paragraph.d_p_form.default' => '24b896d4e50a4e3248fa0fb5c7e0df76',
      'field.field.paragraph.d_p_form.field_d_forms' => '8d9b786b671a99304b1c0f0cf0180002',
      'paragraphs.paragraphs_type.d_p_form' => 'b73dfae939cbc923fe50d3a6e0167e7a',
    ],
    'd_p_side_embed' => [
      'core.entity_form_display.paragraph.d_p_side_embed.default' => '197a8e9a237162df730ddaa6a125a132',
      'core.entity_view_display.paragraph.d_p_side_embed.default' => 'c8c3baf47591775fb200fc1e1c321e91',
      'field.field.paragraph.d_p_side_embed.field_d_embed' => 'cdcfb62ca1ef179d01c8b1a34ee33b6a',
      'paragraphs.paragraphs_type.d_p_side_embed' => 'f9205aa0f13475467ffd52ddb211d919',
    ],
    'd_p_side_image' => [
      'core.entity_form_display.paragraph.d_p_side_image.default' => '81756a6e18085dedb32fdff8bcb31399',
      'core.entity_view_display.paragraph.d_p_side_image.default' => '422ae9680e653960f2332dd6cb2454a4',
      'paragraphs.paragraphs_type.d_p_side_image' => '0a8445dc8e7f5fc03ec466d7616f80b1',
    ],
    'd_p_side_tiles' => [
      'core.entity_form_display.paragraph.d_p_side_tiles.default' => '525e7fb0f140c3b12431ebc1dac27033',
      'core.entity_view_display.paragraph.d_p_side_tiles.default' => '84354dbe2d00ace47307476d8baccc55',
      'paragraphs.paragraphs_type.d_p_side_tiles' => '187a671005d84e040132bc72cca5e696',
    ],
    'd_p_subscribe_file' => [
      'core.entity_form_display.paragraph.d_p_subscribe_file.default' => '14dacc7e4675c8045e5744ad8d1383f7',
      'core.entity_view_display.paragraph.d_p_subscribe_file.default' => '579cf99f5c52af7b5065414a2b347db7',
      'paragraphs.paragraphs_type.d_p_subscribe_file' => '727b8480ec01b78bf3f590b187a6e9d7',
    ],
    'd_p_text_blocks' => [
      'core.entity_form_display.paragraph.d_p_group_of_text_blocks.default' => '34e5046b05646a6d3fe3ca1893db6b25',
      'core.entity_form_display.paragraph.d_p_single_text_block.default' => 'a834146055c3d283772bd8c3214341ac',
      'core.entity_view_display.paragraph.d_p_group_of_text_blocks.default' => '4dc749c7d9ed6fb83a6392bd250fbb01',
      'core.entity_view_display.paragraph.d_p_single_text_block.default' => '09767495105efb1b13442a2137f274d8',
      'field.field.paragraph.d_p_group_of_text_blocks.field_d_number' => '5cab672775811055e9137464dd08aad6',
      'field.field.paragraph.d_p_single_text_block.field_d_cta_link' => '92d8daf511cd9eb4a43d7b29e710915d',
      'paragraphs.paragraphs_type.d_p_group_of_text_blocks' => 'c264863b3354f768abf6f2bd88c1da15',
      'paragraphs.paragraphs_type.d_p_single_text_block' => 'ec45ee5701b5ce492242fa249dc06732',
    ],
    'd_p_text_paged' => [
      'core.entity_form_display.paragraph.d_p_text_paged.default' => '403ed2ec7184a353a4dcafb6c29c8b9f',
      'core.entity_view_display.paragraph.d_p_text_paged.default' => '3975a03431b25100b107414d1a93e7a0',
      'paragraphs.paragraphs_type.d_p_text_paged' => '7c5327778357f146cfb8baf3a35c303b',
    ],
    'd_p_text_with_bckg' => [
      'core.entity_form_display.paragraph.d_p_text_with_bckg.default' => '2deb9cb001cbb9c4c63c8d128ac0952f',
      'core.entity_view_display.paragraph.d_p_text_with_bckg.default' => '64ddaed00879c2da67a6e892f1b26c84',
      'paragraphs.paragraphs_type.d_p_text_with_bckg' => '9b91ac1dec815a728d407ae2acdb0c11',
    ],
    'd_p_tiles' => [
      'core.entity_form_display.paragraph.d_p_tiles.default' => '093e93052e796256226f61129c2cccc3',
      'core.entity_view_display.paragraph.d_p_tiles.default' => '8677362a770aa12f2a7324cafbc218e7',
    ],
  ];
  $values['droopler__droopler_update_8105_1'] = $updater->importConfigs($configs);

  $module_handler = \Drupal::service('module_handler');
  if ($module_handler->moduleExists('d_blog')) {
    // Update d_blog config.
    $configs = [
      'd_blog' => [
        'core.entity_form_display.node.blog_post.default' => '603fb0f534a9c20e295be07e56f287a6',
        'core.entity_form_display.paragraph.d_p_blog_image.default' => '7ead3779e30b84710c8615cb75caed17',
        'core.entity_form_display.taxonomy_term.blog_posts_category.default' => 'd8c18c3962d62d09478c3124eb7ef418',
        'core.entity_view_display.node.blog_post.default' => 'c3e0e6369e9aaabf0727d1c29758ff5e',
        'core.entity_view_display.node.blog_post.teaser' => 'f1297df19ed58672ad218dc47f535c07',
        'core.entity_view_display.node.blog_post.thumbnail' => '16ef78d28d2955b15fce6405347431e6',
        'core.entity_view_display.paragraph.d_p_blog_image.default' => '0d18813129a069942609352a265b2525',
        'field.field.paragraph.d_p_blog_image.field_d_p_blog_image_full_width' => '191f125fe86132996c07c3a4da925d7f',
        'field.field.paragraph.d_p_blog_text.field_d_long_text' => '2e3ac5a8d439ab6289ae19ef38187a1e',
        'paragraphs.paragraphs_type.d_p_blog_image' => '643a10d93a4844bf81734ccd6c5c2bc0',
        'paragraphs.paragraphs_type.d_p_blog_text' => '56844143a1c28a7bbd0b5a9c3672bf78',
      ],
    ];
    $values['droopler__droopler_update_8105_2'] = $updater->importConfigs($configs);
  }
  else {
    $values['droopler__droopler_update_8105_2'] = TRUE;
  }
  if ($module_handler->moduleExists('d_product')) {
    $configs = [
      'd_product' => [
        'core.entity_view_mode.media.d_product_gallery' => '',
        'core.entity_view_mode.media.d_product_image' => '',
        'core.entity_view_display.node.d_product.default' => 'b4befeb98b5bf9ac936537ebc3895798',
        'core.entity_view_display.node.d_product.full' => '0620c3d8ae706a97b059e2f128972a1f',
        'core.entity_view_display.node.d_product.teaser' => 'c4f0f872b626ce65814b70f70e219401',
        'core.entity_form_display.node.d_product.default' => '41377c8dd106b984ec59504606acd45e',
        'core.entity_view_display.media.d_image.d_product_gallery' => '',
        'core.entity_view_display.media.d_image.d_product_image' => '',
        'core.entity_view_display.node.d_product.d_small_box' => '',
      ],
    ];
    $values['droopler__droopler_update_8105_3'] = $updater->importConfigs($configs);
  }
  else {
    $values['droopler__droopler_update_8105_3'] = TRUE;
  }

  $progress = [
    'v2.0' => $values,
  ];

  $updater->checklist()->saveProgress($progress);

}


/**
 * Returns a list of modules to install, based on the list of required modules.
 *
 * @param array $modules
 *   Array of required modules.
 *
 * @return array
 *   Array of modules that actually need installing.
 */
function calculate_modules_for_install(array $modules) {
  $module_handler = \Drupal::service('module_handler');
  $modulesToInstall = [];
  foreach ($modules as $module) {
    if (!$module_handler->moduleExists($module)) {
      $modulesToInstall[] = $module;
    }
  }

  return $modulesToInstall;
}
